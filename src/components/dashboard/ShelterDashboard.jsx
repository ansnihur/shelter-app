/* eslint-disable no-unused-vars */
import React, { useState, useEffect } from "react";
import { useUser } from "../../context/UserContext"; // HOOK
import "./ShelterDashboard.scss";

const ShelterDashboard = () => {
  const { user } = useUser();
  const [pets, setPets] = useState([]);
  const [activeTab, setActiveTab] = useState("–ü—Ä–æ—Ñ—ñ–ª—å");
  const [requests, setRequests] = useState([]);

  useEffect(() => {
    const allRequests = JSON.parse(localStorage.getItem("volunteerRequests")) || [];
    setRequests(allRequests);
  }, []);

  useEffect(() => {
    const storedPets = JSON.parse(localStorage.getItem("pets")) || [];
    const userPets = storedPets.filter((pet) => pet.shelterEmail === user.email);
    setPets(userPets);
  }, [user]);

  const handleAccept = (id) => {
    const confirmed = window.confirm("üìû –ü—Ä–∏–π–Ω—è—Ç–∏ –∑–∞–ø–∏—Ç? –ü—ñ—Å–ª—è –∑–¥—ñ–π—Å–Ω–µ–Ω–Ω—è –¥–∑–≤—ñ–Ω–∫–∞ –∑–∞–ø–∏—Ç –≤–∏–¥–∞–ª—è—î—Ç—å—Å—è.");
    if (confirmed) {
      window.location.href = "tel:0960000000";
      const updated = requests.filter((r) => r.id !== id);
      setRequests(updated);
      localStorage.setItem("volunteerRequests", JSON.stringify(updated));
    }
  };

  const handleReject = (id) => {
    const confirmed = window.confirm("‚ùå –í–∏ –¥—ñ–π—Å–Ω–æ —Ö–æ—á–µ—Ç–µ –≤—ñ–¥—Ö–∏–ª–∏—Ç–∏ –∑–∞–ø–∏—Ç?");
    if (confirmed) {
      const updated = requests.filter((r) => r.id !== id);
      setRequests(updated);
      localStorage.setItem("volunteerRequests", JSON.stringify(updated));
    }
  };

  const handleDelete = (id) => {
    const updated = pets.filter((pet) => pet.id !== id);
    setPets(updated);
    localStorage.setItem("pets", JSON.stringify(updated));
  };

  const handleEdit = (id) => {
    alert("–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ üõ†Ô∏è");
  };

  const renderContent = () => {
    switch (activeTab) {
      case "–ü—Ä–æ—Ñ—ñ–ª—å":
        return (
          <div className="tab-content">
            <h2>üè† –ü—Ä–æ—Ñ—ñ–ª—å –ø—Ä–∏—Ç—É–ª–∫—É</h2>
            <p><strong>–ù–∞–∑–≤–∞ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó:</strong> {user?.organization}</p>
            <p><strong>–ö–∞—Ç–µ–≥–æ—Ä—ñ—è:</strong> {user?.category}</p>
            <p><strong>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ –æ—Å–æ–±–∞:</strong> {user?.fullName}</p>
            <p><strong>Email:</strong> {user?.email}</p>
            <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> {user?.phone}</p>
          </div>
        );
      case "–ú–æ—ó —Ç–≤–∞—Ä–∏–Ω–∏":
        return (
          <div className="tab-content">
            <h2>üêæ –ú–æ—ó —Ç–≤–∞—Ä–∏–Ω–∏</h2>
            {pets.length > 0 ? (
              <div className="find-pet">
                {pets.map((pet) => (
                  <div key={pet.id} className="pet-card">
                    <img src={pet.image} alt={pet.name} />
                    <div className="pet-info">
                      <h4>{pet.name}, {pet.age} —Ä–æ–∫—ñ–≤</h4>
                      <p>{pet.kind} ‚Ä¢ {pet.location}</p>
                    </div>
                    <div className="pet-actions">
                      <button className="btn btn-edit" onClick={() => handleEdit(pet.id)}>‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏</button>
                      <button className="btn btn-remove" onClick={() => handleDelete(pet.id)}>üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏</button>
                    </div>
                  </div>
                ))}
              </div>
            ) : (
              <p>–£ –≤–∞—Å –ø–æ–∫–∏ –Ω–µ–º–∞—î –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏—Ö —Ç–≤–∞—Ä–∏–Ω–æ–∫ üêï</p>
            )}
          </div>
        );
      case "–ó–∞—è–≤–∫–∏":
        return (
          <div className="tab-content">
            <h2>üì• –ó–∞—è–≤–∫–∏ –≤—ñ–¥ –≤–æ–ª–æ–Ω—Ç–µ—Ä—ñ–≤</h2>
            {requests.length > 0 ? (
              <div className="requests-list">
                {requests.map((req) => (
                  <div key={req.id} className="request-card">
                    <p><strong>–Ü–º‚Äô—è:</strong> {req.name}</p>
                    <p><strong>Email:</strong> {req.email}</p>
                    <p><strong>–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:</strong> {req.message}</p>
                    <div className="request-actions">
                      <button className="btn btn-call" onClick={() => handleAccept(req.id)}>–ü—Ä–∏–π–Ω—è—Ç–∏</button>
                      <button className="btn btn-remove" onClick={() => handleReject(req.id)}>–í—ñ–¥—Ö–∏–ª–∏—Ç–∏</button>
                    </div>
                  </div>
                ))}
              </div>
            ) : (
              <p>–ù–∞—Ä–∞–∑—ñ –Ω–µ–º–∞—î –∑–∞–ø–∏—Ç—ñ–≤ üò∫</p>
            )}
          </div>
        );
      default:
        return null;
    }
  };

  return (
    <div className="dashboard">
      <h1 className="dashboard__title">–ö–∞–±—ñ–Ω–µ—Ç –ø—Ä–∏—Ç—É–ª–∫—É</h1>
      <div className="dashboard__tabs">
        <button onClick={() => setActiveTab("–ü—Ä–æ—Ñ—ñ–ª—å")} className={activeTab === "–ü—Ä–æ—Ñ—ñ–ª—å" ? "active" : ""}>–ü—Ä–æ—Ñ—ñ–ª—å</button>
        <button onClick={() => setActiveTab("–ú–æ—ó —Ç–≤–∞—Ä–∏–Ω–∏")} className={activeTab === "–ú–æ—ó —Ç–≤–∞—Ä–∏–Ω–∏" ? "active" : ""}>–ú–æ—ó —Ç–≤–∞—Ä–∏–Ω–∏</button>
        <button onClick={() => setActiveTab("–ó–∞—è–≤–∫–∏")} className={activeTab === "–ó–∞—è–≤–∫–∏" ? "active" : ""}>–ó–∞—è–≤–∫–∏</button>
      </div>
      {renderContent()}
    </div>
  );
};

export default ShelterDashboard;
